version: "3.8"

volumes:
    app:

networks:
    public:
        driver: bridge
    elk:
        driver: bridge
    database:
        driver: bridge

services:
    php:
        build: ./php
        ports:
            - ${PHP_PORT}:80
        restart: unless-stopped
        depends_on:
            - logstash
            - mariadb
        networks:
            - public
            - elk
            - database
        volumes:
            - ./app:/var/www/html
        environment:
            - IS_LOGGING=${IS_LOGGING}
            - ROOT_PORT=${PHP_PORT}
            - KIBANA_PORT=${KIBANA_PORT}
            - DB_HOST=mariadb
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWD=${DB_PASSWORD}
            - SENDGRID_API_KEY=${SENDGRID_API_KEY}
            - EMAIL_FROM=${EMAIL_FROM}
        healthcheck:
            test: curl --fail -s http://localhost:80 || exit 1
            interval: 60s
            retries: 5
            start_period: 30s
            timeout: 10s

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
        restart: unless-stopped
        networks:
            - elk
        environment:
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - xpack.security.enabled=false
            - xpack.security.http.ssl.enabled=false
        mem_limit: ${MEM_LIMIT}
        ulimits:
            memlock:
                soft: -1
                hard: -1
        healthcheck:
            test: curl --fail -s ${ELASTICSEARCH_URL} || exit 1
            interval: 30s
            timeout: 10s
            retries: 50

    logstash:
        image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
        restart: unless-stopped
        depends_on:
            elasticsearch:
                condition: service_healthy
        networks:
            - elk
        volumes:
            - "./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml"
            - "./logstash/logstash.conf:/usr/share/logstash/config/logstash_simple.conf"
            - "./logstash/logs:/usr/share/logstash/logs"
        environment:
            LS_JAVA_OPTS: "-Xms500m -Xmx500m -XX:ParallelGCThreads=1"
            ELASTICSEARCH_HOST: ${ELASTICSEARCH_URL}
            ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
            IS_LOGGING: ${IS_LOGGING}
        mem_limit: ${MEM_LIMIT}
        entrypoint:
            - logstash
            - -f
            - /usr/share/logstash/config/logstash_simple.conf

    kibana:
        image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
        ports:
            - ${KIBANA_PORT}:5601
        restart: unless-stopped
        depends_on:
            - php
            - elasticsearch
        networks:
            - public
            - elk
        environment:
            - SERVERNAME=kibana
            - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_URL}
            - ELASTICSEARCH_USERNAME=kibana_system
            - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
        mem_limit: ${MEM_LIMIT}
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
                ]
            interval: 10s
            timeout: 10s
            start_period: 30s
            retries: 120

    mariadb:
        image: mariadb
        restart: unless-stopped
        networks:
            - database
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./mariadb/initscripts:/docker-entrypoint-initdb.d
            - ./mariadb/sysdata:/var/lib/mysql/

    adminer:
        image: adminer
        restart: unless-stopped
        ports:
            - ${ADMINER_PORT}:8080
        depends_on:
            - mariadb
        networks:
            - public
            - database
        volumes:
            - ./mariadb/adminer/theme.css:/var/www/html/adminer.css
